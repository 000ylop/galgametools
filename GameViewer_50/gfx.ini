/*
GV_API void                 UseFVF  (void);
GV_API void                 UseDecl (void);
GV_API void                 SetVPMatToFixed (void);
GV_API void                 SetMMatToFixed  (D3DXMATRIX *tran);
GV_API void                 SetVMatToVS (uint32 reg);
GV_API void                 SetPMatToVS (uint32 reg);
GV_API void                 SetMMatToVS   (D3DXMATRIX *tran, uint32 reg);
GV_API void                 SetMVPMatToVS (D3DXMATRIX *tran, uint32 reg);
GV_API void                 SetEyeToVS    (uint32 reg);
GV_API void                 SetEyeToPS    (uint32 reg);
GV_API void                 SetLookAtToVS (uint32 reg);
GV_API void                 SetLookAtToPS (uint32 reg);
GV_API void                 SetViewToVS   (uint32 reg);
GV_API void                 SetViewToPS   (uint32 reg);
GV_API void                 SetFVF  (sGfxMesh *mesh);
GV_API void                 SetDecl (sGfxMesh *mesh);
GV_API uint32               SetRenderState  (D3DRENDERSTATETYPE state, DWORD value);
GV_API uint32               SetSamplerState (DWORD sampler, D3DSAMPLERSTATETYPE type, DWORD value);
GV_API uint32               SetTextureStageState (DWORD stage, D3DTEXTURESTAGESTATETYPE type, DWORD value);
GV_API d3d9::CTexture*      CreateTexture   (void);
GV_API d3d9::CTexture3D*    CreateTexture3D (void);
GV_API void                 ReleaseTexture   (d3d9::CTexture   *texture);
GV_API void                 ReleaseTexture3D (d3d9::CTexture3D *texture);
GV_API void                 LoadTexture    (d3d9::CTexture   *texture, const char *fileName, DWORD keyColor);
GV_API void                 LoadTexture3D  (d3d9::CTexture3D *texture, const char *fileName);
GV_API void                 SetTexture   (uint32 sampler, d3d9::CTexture   *texture);
GV_API void                 SetTexture3D (uint32 sampler, d3d9::CTexture3D *texture);
GV_API void                 DIP (sGfxMesh *mesh);
GV_API d3d9::CShader*       CreateAsmShader  (void);
GV_API d3d9::CShader*       CreateHlslShader (void);
GV_API void                 ReleaseShader (d3d9::CShader *shader);
GV_API void                 CompileVS (d3d9::CShader *shader, const char *code);
GV_API void                 CompilePS (d3d9::CShader *shader, const char *code);
GV_API void                 EnableVS  (d3d9::CShader *shader);
GV_API void                 EnablePS  (d3d9::CShader *shader);
GV_API void                 DisableVS (d3d9::CShader *shader);
GV_API void                 DisablePS (d3d9::CShader *shader);
GV_API void                 SetVSConstB (uint32 reg, const BOOL  *data, uint32 count);
GV_API void                 SetVSConstF (uint32 reg, const float *data, uint32 count);
GV_API void                 SetVSConstI (uint32 reg, const int   *data, uint32 count);
GV_API void                 SetPSConstB (uint32 reg, const BOOL  *data, uint32 count);
GV_API void                 SetPSConstF (uint32 reg, const float *data, uint32 count);
GV_API void                 SetPSConstI (uint32 reg, const int   *data, uint32 count);

gv.mesh = 渲染的 sGfxMesh
gv.tran = 渲染部件的 tran
gv.data = 渲染部件的附加数据

gv.mdl_size = 模型附加数据大小
gv.mdl_data = 模型附加数据
*/

gfx_api = """
    <APIs>
        <BIN file="user32.dll">
            <stdcall name="MessageBoxA" param="4" />
            <stdcall name="MessageBoxW" param="4" />
        </BIN>

        <BIN file="gfx.dll">
            <cdecl name="UseFVF"               param="0" />
            <cdecl name="UseDecl"              param="0" />
            <cdecl name="SetVPMatToFixed"      param="0" />
            <cdecl name="SetMMatToFixed"       param="1" />
            <cdecl name="SetVMatToVS"          param="1" />
            <cdecl name="SetPMatToVS"          param="1" />
            <cdecl name="SetMMatToVS"          param="2" />
            <cdecl name="SetMVPMatToVS"        param="2" />
            <cdecl name="SetEyeToVS"           param="1" />
            <cdecl name="SetEyeToPS"           param="1" />
            <cdecl name="SetLookAtToVS"        param="1" />
            <cdecl name="SetLookAtToPS"        param="1" />
            <cdecl name="SetViewToVS"          param="1" />
            <cdecl name="SetViewToPS"          param="1" />
            <cdecl name="SetFVF"               param="1" />
            <cdecl name="SetDecl"              param="1" />
            <cdecl name="SetRenderState"       param="2" />
            <cdecl name="SetSamplerState"      param="3" />
            <cdecl name="SetTextureStageState" param="3" />
            <cdecl name="CreateTexture"        param="0" />
            <cdecl name="CreateTexture3D"      param="0" />
            <cdecl name="ReleaseTexture"       param="1" />
            <cdecl name="ReleaseTexture3D"     param="1" />
            <cdecl name="LoadTexture"          param="3" />
            <cdecl name="LoadTexture3D"        param="2" />
            <cdecl name="SetTexture"           param="2" />
            <cdecl name="SetTexture3D"         param="2" />
            <cdecl name="DIP"                  param="1" />
            <cdecl name="CreateAsmShader"      param="0" />
            <cdecl name="CreateHlslShader"     param="0" />
            <cdecl name="ReleaseShader"        param="1" />
            <cdecl name="CompileVS"            param="2" />
            <cdecl name="CompilePS"            param="2" />
            <cdecl name="EnableVS"             param="1" />
            <cdecl name="EnablePS"             param="1" />
            <cdecl name="DisableVS"            param="1" />
            <cdecl name="DisablePS"            param="1" />
            <cdecl name="SetVSConstB"          param="3" />
            <cdecl name="SetVSConstF"          param="3" />
            <cdecl name="SetVSConstI"          param="3" />
            <cdecl name="SetPSConstB"          param="3" />
            <cdecl name="SetPSConstF"          param="3" />
            <cdecl name="SetPSConstI"          param="3" />
        </BIN>
    </APIs>
""";
if [sys.importBin [sys.self, gfx_api] == 0][;]

gv.INIT = 0;    // 载入时运行
gv.TERM = 1;    // 卸载时运行
gv.LOOP = 2;    // 循环内运行
gv.LOAD = 3;    // 循环前运行
gv.EXIT = 4;    // 循环后运行

// 一些D3D常数
D3DRS_ZENABLE          = 7;
D3DRS_FILLMODE         = 8;
D3DRS_SHADEMODE        = 9;
D3DRS_ZWRITEENABLE     = 14;
D3DRS_ALPHATESTENABLE  = 15;
D3DRS_SRCBLEND         = 19;
D3DRS_DESTBLEND        = 20;
D3DRS_CULLMODE         = 22;
D3DRS_ZFUNC            = 23;
D3DRS_ALPHAREF         = 24;
D3DRS_ALPHAFUNC        = 25;
D3DRS_DITHERENABLE     = 26;
D3DRS_ALPHABLENDENABLE = 27;
D3DRS_FOGENABLE        = 28;
D3DRS_FOGCOLOR         = 34;
D3DRS_FOGTABLEMODE     = 35;
D3DRS_FOGSTART         = 36;
D3DRS_FOGEND           = 37;
D3DRS_FOGDENSITY       = 38;
D3DRS_RANGEFOGENABLE   = 48;
D3DRS_TEXTUREFACTOR    = 60;
D3DRS_FOGVERTEXMODE    = 140;
D3DRS_NORMALIZENORMALS = 143;
D3DRS_BLENDOP          = 171;
D3DRS_BLENDFACTOR      = 193;
D3DRS_DEPTHBIAS        = 195;
D3DRS_SRCBLENDALPHA    = 207;
D3DRS_DESTBLENDALPHA   = 208;
D3DRS_BLENDOPALPHA     = 209;

D3DZB_FALSE = 0;
D3DZB_TRUE  = 1;
D3DZB_USEW  = 2;

D3DFILL_POINT     = 1;
D3DFILL_WIREFRAME = 2;
D3DFILL_SOLID     = 3;

D3DSHADE_FLAT    = 1;
D3DSHADE_GOURAUD = 2;
D3DSHADE_PHONG   = 3;

D3DBLEND_ZERO            = 1;
D3DBLEND_ONE             = 2;
D3DBLEND_SRCCOLOR        = 3;
D3DBLEND_INVSRCCOLOR     = 4;
D3DBLEND_SRCALPHA        = 5;
D3DBLEND_INVSRCALPHA     = 6;
D3DBLEND_DESTALPHA       = 7;
D3DBLEND_INVDESTALPHA    = 8;
D3DBLEND_DESTCOLOR       = 9;
D3DBLEND_INVDESTCOLOR    = 10;
D3DBLEND_SRCALPHASAT     = 11;
D3DBLEND_BOTHSRCALPHA    = 12;
D3DBLEND_BOTHINVSRCALPHA = 13;
D3DBLEND_BLENDFACTOR     = 14;
D3DBLEND_INVBLENDFACTOR  = 15;

D3DCULL_NONE = 1;
D3DCULL_CW   = 2;
D3DCULL_CCW  = 3;

D3DCMP_NEVER        = 1;
D3DCMP_LESS         = 2;
D3DCMP_EQUAL        = 3;
D3DCMP_LESSEQUAL    = 4;
D3DCMP_GREATER      = 5;
D3DCMP_NOTEQUAL     = 6;
D3DCMP_GREATEREQUAL = 7;
D3DCMP_ALWAYS       = 8;

D3DFOG_NONE   = 0;
D3DFOG_EXP    = 1;
D3DFOG_EXP2   = 2;
D3DFOG_LINEAR = 3;

D3DSAMP_ADDRESSU      = 1;
D3DSAMP_ADDRESSV      = 2;
D3DSAMP_ADDRESSW      = 3;
D3DSAMP_BORDERCOLOR   = 4;
D3DSAMP_MAGFILTER     = 5;
D3DSAMP_MINFILTER     = 6;
D3DSAMP_MIPFILTER     = 7;
D3DSAMP_MIPMAPLODBIAS = 8;
D3DSAMP_MAXMIPLEVEL   = 9;
D3DSAMP_MAXANISOTROPY = 10;
D3DSAMP_SRGBTEXTURE   = 11;
D3DSAMP_ELEMENTINDEX  = 12;
D3DSAMP_DMAPOFFSET    = 13;

D3DTEXF_NONE          = 0;
D3DTEXF_POINT         = 1;
D3DTEXF_LINEAR        = 2;
D3DTEXF_ANISOTROPIC   = 3;
D3DTEXF_PYRAMIDALQUAD = 6;
D3DTEXF_GAUSSIANQUAD  = 7;

D3DTSS_COLOROP               = 1;
D3DTSS_COLORARG1             = 2;
D3DTSS_COLORARG2             = 3;
D3DTSS_ALPHAOP               = 4;
D3DTSS_ALPHAARG1             = 5;
D3DTSS_ALPHAARG2             = 6;
D3DTSS_TEXCOORDINDEX         = 11;
D3DTSS_TEXTURETRANSFORMFLAGS = 24;
D3DTSS_COLORARG0             = 26;
D3DTSS_ALPHAARG0             = 27;
D3DTSS_RESULTARG             = 28;
D3DTSS_CONSTANT              = 32;

D3DTOP_DISABLE                   = 1;
D3DTOP_SELECTARG1                = 2;
D3DTOP_SELECTARG2                = 3;
D3DTOP_MODULATE                  = 4;
D3DTOP_MODULATE2X                = 5;
D3DTOP_MODULATE4X                = 6;
D3DTOP_ADD                       = 7;
D3DTOP_ADDSIGNED                 = 8;
D3DTOP_ADDSIGNED2X               = 9;
D3DTOP_SUBTRACT                  = 10;
D3DTOP_ADDSMOOTH                 = 11;
D3DTOP_BLENDDIFFUSEALPHA         = 12;
D3DTOP_BLENDTEXTUREALPHA         = 13;
D3DTOP_BLENDFACTORALPHA          = 14;
D3DTOP_BLENDTEXTUREALPHAPM       = 15;
D3DTOP_BLENDCURRENTALPHA         = 16;
D3DTOP_PREMODULATE               = 17;
D3DTOP_MODULATEALPHA_ADDCOLOR    = 18;
D3DTOP_MODULATECOLOR_ADDALPHA    = 19;
D3DTOP_MODULATEINVALPHA_ADDCOLOR = 20;
D3DTOP_MODULATEINVCOLOR_ADDALPHA = 21;
D3DTOP_DOTPRODUCT3               = 24;
D3DTOP_MULTIPLYADD               = 25;
D3DTOP_LERP                      = 26;

D3DTA_CONSTANT       = 0x00000006;
D3DTA_CURRENT        = 0x00000001;
D3DTA_DIFFUSE        = 0x00000000;
D3DTA_SELECTMASK     = 0x0000000f;
D3DTA_SPECULAR       = 0x00000004;
D3DTA_TEMP           = 0x00000005;
D3DTA_TEXTURE        = 0x00000002;
D3DTA_TFACTOR        = 0x00000003;
D3DTA_ALPHAREPLICATE = 0x00000020;
D3DTA_COMPLEMENT     = 0x00000010;

D3DTSS_TCI_PASSTHRU                    = 0x00000000;
D3DTSS_TCI_CAMERASPACENORMAL           = 0x00010000;
D3DTSS_TCI_CAMERASPACEPOSITION         = 0x00020000;
D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR = 0x00030000;
D3DTSS_TCI_SPHEREMAP                   = 0x00040000;

D3DTTFF_DISABLE   = 0;
D3DTTFF_COUNT1    = 1;
D3DTTFF_COUNT2    = 2;
D3DTTFF_COUNT3    = 3;
D3DTTFF_COUNT4    = 4;
D3DTTFF_PROJECTED = 256;
