{-# enc CP932 #-
  compat.kh: Kepago/RealLive RTL compatibility functions.

  This library contains wrappers for functions whose names or effects have been 
  changed.  You can load this file if your code relies on the old names.  It is, 
  however, recommended that you update your code to use the new functions 
  instead.
  
  By default, the library does nothing.  To select which functions you wish to
  have included, define symbols before loading it:
  
    PRE_121  --  Support for function names used in RLdev < 1.21
    PRE_120  --  Support for function names used in RLdev < 1.20 (implies PRE_121)
    PRE_103  --  Support for function names used in RLdev < 1.03 (implies PRE_121 and PRE_120)
    KPACAPI  --  Support for functions used in Kpac's Kepago/AVG32 API

  The RLdev run-time library is copyright (c) 2006 Peter Jolly.

  This file is part of RLdev, which is licensed under the GNU General Public
  License, version 2.  This file may be considered an integral part of the
  compiler; programs are therefore permitted to include this code, as
  automatically included by the rlc compiler, without thereby being classed as
  derivative works.  This means that programs compiled with RLdev are not ipso
  facto required to be licensed under the GNU GPL, although this does not affect
  any other reason why they might be required to be so licensed, nor are any
  other uses of this code so exempted.
-}

#ifndef __COMPAT_KH__
#define __COMPAT_KH__

#ifndef PRE_121 && PRE_120 && PRE_103 && KPACAPI
  #warn '#load "compat" did nothing. You must define one of the symbols PRE_121, PRE_120, PRE_103, or KPACAPI before loading this library.'
#endif

// Pre-1.21 compatibility

#ifdef PRE_121 || PRE_120 || PRE_103
  
  #ifndef PRE_120 && PRE_103
    #warn 'you have enabled the use of functions that were already deprecated in a previous version of the
           API.  Please consider updating them to the latest version'
  #endif
    
  #inline objHide (__buf, [__max]):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name objHide is deprecated: use objClear instead')
    #ifdef __max
      objClear (__buf, __max)
    #else
      objClear (__buf)
    #endif;
  
  #inline objBgHide (__buf, [__max]):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name objBgHide is deprecated: use objBgClear instead')
    #ifdef __max
      objBgClear (__buf, __max)
    #else
      objBgClear (__buf)
    #endif;
  
  #inline Date (__y, __m, __d, __wd):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name Date is deprecated: use GetDate instead')
    GetDate (__y, __m, __d, __wd);
  
  #define __HideFunctionsSilently__
  #inline Time (__t, [__c], [__ss], __ms = store):
    #ifdef __ss
      #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name Time for the time-of-day function is deprecated due to a conflict with the wait-for-timer function of the same name: use GetTime instead')
      GetTime (__t, __c, __ss, __ms)
    #elseif defined? (__c)
      time (__t, __c)
    #else
      time (__t)
    #endif;
  #undef __HideFunctionsSilently__
  
  #inline DateTime (__y, __m, __d, __wd, __hh, __mm, __ss, __ms):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name DateTime is deprecated: use GetDateTime instead')
    GetDateTime (__y, __m, __d, __wd, __hh, __mm, __ss, __ms);

#endif

// Pre-1.20 compatibility

#ifdef PRE_120 || PRE_103
  
  #ifndef PRE_103
    #warn 'you have enabled the use of functions that were already deprecated in a previous version of the
           API.  Please consider updating them to the latest version'
  #endif
  
  #inline SetWindowAttrRGB (__r, __g, __b):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name SetWindowAttrRGB is deprecated: use SetWindowAttr instead')
    __swaRGB (__r, __g, __b);
  
  #inline GetWindowAttrRGB (__r, __g, __b):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name GetWindowAttrRGB is deprecated: use GetWindowAttr instead')
    __gwaRGB (__r, __g, __b);
  
  #inline DefWindowAttrRGB (__r, __g, __b):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name DefWindowAttrRGB is deprecated: use DefWindowAttr instead')
    __dwaRGB (__r, __g, __b);
  
  #inline SetWindowAttrRGBA (__r, __g, __b, __a):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name SetWindowAttrRGBA is deprecated: use SetWindowAttr instead')
    __swaRGBA (__r, __g, __b, __a);
  
  #inline GetWindowAttrRGBA (__r, __g, __b, __a):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name GetWindowAttrRGBA is deprecated: use GetWindowAttr instead')
    __gwaRGBA (__r, __g, __b, __a);
  
  #inline DefWindowAttrRGBA (__r, __g, __b, __a):
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name DefWindowAttrRGBA is deprecated: use DefWindowAttr instead')
    __dwaRGBA (__r, __g, __b, __a);

#endif

// Pre-1.03 compatibility

#ifdef PRE_103

  #warn 'you have enabled the use of functions that were deprecated several versions ago!
         Please update your code to the newest API'
  
  #inline pause2 ():
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name pause2 is deprecated: use pause_all instead')
    pause_all;
  
  #inline msgClear2 ():
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name msgClear2 is deprecated: use msgClearAll instead')
    msgClearAll;
  
  #inline msgHide2 ():
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name msgHide2 is deprecated: use msgHideAll instead')
    msgHideAll;
  
  #inline msgHide3 ():
    #warn at (__CALLER_FILE__, __CALLER_LINE__, 'the name msgHide3 is deprecated: use msgHideAllTemp instead')
    msgHideAllTemp;

#endif

// Kepago/AVG32 API compatibility

#ifdef KPACAPI

  #inline fade (__col)
    grpFade (__col)

  #inline popjsr ()
    CallStackPop

  #inline popall ()
    CallStackClear

  #inline SetCanSkipMode ()
    EnableSkipMode
    
  #inline ClearCanSkipMode ()
    DisableSkipMode

  #inline rand (__min, __max)
    return rnd (__min, __max)

  #inline Year ()
    return GetYear

  #inline Date ()
    return GetMonth * 100 + GetDay
    
  #inline DayOfWeek ()
    return GetDayOfWeek

  #inline TimeOfDay ()
    return GetHour * 100 + GetMinute

#endif

#endif // !defined(__COMPAT_KH__)
