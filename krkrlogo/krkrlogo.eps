%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 9.0
%%For: (MIK ) ( )
%%Title: (krkrlogo_kai.eps)
%%CreationDate: 8/4/2002 12:29 AM
%%BoundingBox: 200 63 385 812
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 296.5 419.5 296.5 419.5
%AI3_TileBox: 14 16 578 826
%AI3_DocumentPreview: PC_ColorTIFF
%%PageOrigin:14 16
%%AI3_PaperRect:-14 828 581 -14
%%AI3_Margin:14 -15 -15 14
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%AI3_BeginPattern: (\203A\203W\203\205\201[\203\213\203\212\203\223\203O)
(\203A\203W\203\205\201[\203\213\203\212\203\223\203O) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203J\203\200\203t\203\211\201[\203W\203\205)
(\203J\203\200\203t\203\211\201[\203W\203\205) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.5961 0.1412 0.949 0.0275 k
 0.5961 0.1412 0.949 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.498 0.349 0.9725 0.2 k
 0.498 0.349 0.9725 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k
 0.1882 0.1098 0.9255 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k
 0.9255 0.2157 0.9647 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203O\203\212\201[\203\223\203e\201[\203u\203\213\203N\203\215\203X)
(\203O\203\212\201[\203\223\203e\201[\203u\203\213\203N\203\215\203X) 0 0 24 24 [
%AI3_Tile
(0 O 0 R 0.8 0.21 1 0 k
 0.8 0.21 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6 18 m
0 18 L
0 24 L
6 24 L
6 18 L
f18 18 m
12 18 L
12 24 L
18 24 L
18 18 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12 18 m
6 18 L
6 24 L
12 24 L
12 18 L
f24 18 m
18 18 L
18 24 L
24 24 L
24 18 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12 12 m
6 12 L
6 18 L
12 18 L
12 12 L
f24 12 m
18 12 L
18 18 L
24 18 L
24 12 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6 12 m
0 12 L
0 18 L
6 18 L
6 12 L
f18 12 m
12 12 L
12 18 L
18 18 L
18 12 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8 0.21 1 0 k
 0.8 0.21 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f18 6 m
12 6 L
12 12 L
18 12 L
18 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f24 6 m
18 6 L
18 12 L
24 12 L
24 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f24 0 m
18 0 L
18 6 L
24 6 L
24 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f18 0 m
12 0 L
12 6 L
18 6 L
18 0 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203s\203G\203\215)
(\203s\203G\203\215) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203s\203\211\203~\203b\203h)
(\203s\203\211\203~\203b\203h) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203\214\203b\203h\203X\203g\203\211\203C\203v)
(\203\214\203b\203h\203X\203g\203\211\203C\203v) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.9608 0.9137 0 k
 0 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
u0 O
0 0 0 1 k
0 R
0 0 0 0 K
0 J 0 j 1 w 4 M []0 d350.3389 765.2622 m
348.7441 762.8696 347.124 761.4043 345.1953 760.1182 c
336.8379 756.2612 328.4795 753.6895 319.4785 751.7607 c
313.0498 749.832 305.9775 751.1182 299.5488 748.5459 c
295.0488 746.6172 293.7627 739.5454 298.2637 736.9741 c
302.7637 734.4023 307.2637 735.688 312.4072 735.0454 c
318.8359 733.7593 323.9795 732.4736 330.4082 730.5444 c
332.9805 729.9019 335.5518 729.2588 337.4805 726.687 c
342.624 720.2578 340.0518 709.9717 332.3369 707.3994 c
324.623 705.4712 314.3359 705.4712 309.835 697.7563 c
309.835 697.1133 311.1211 695.8276 311.7646 695.8276 c
316.2656 695.1846 320.1221 696.4707 324.623 695.8276 c
326.5508 695.1846 328.4795 693.8989 329.7666 692.6133 c
332.9805 690.0415 336.1943 687.4697 337.4805 682.9697 c
338.124 676.5405 338.7666 669.4683 334.9092 664.3247 c
332.9805 661.1104 331.6943 657.8955 329.123 654.6812 c
328.4795 654.0381 328.4795 652.1099 329.123 651.4668 c
333.624 648.895 339.4092 650.1812 343.9102 648.252 c
345.1953 647.6094 345.8379 646.9663 346.4814 645.6807 c
349.0527 639.8945 345.1953 634.1084 340.6953 632.1797 c
338.124 630.8936 335.5518 629.6079 332.9805 629.6079 c
316.9072 628.9644 300.835 632.1797 284.7622 636.0366 c
280.9048 637.3228 282.1904 643.1089 286.0479 645.0376 c
289.2627 645.6807 292.4766 646.9663 295.6914 647.6094 c
298.9063 648.252 302.1201 649.5381 304.0498 650.8237 c
311.7646 655.9668 318.8359 663.6821 315.6221 673.3257 c
314.9785 676.5405 311.7646 678.4692 308.5498 678.4692 c
297.6191 678.4692 287.9766 672.6831 277.6899 668.1821 c
275.7612 666.8965 273.8325 664.9678 272.5469 663.0391 c
270.6177 658.5386 268.6895 654.6812 268.0469 650.1812 c
268.0469 646.3232 269.9751 642.4658 270.6177 638.6084 c
271.2612 631.5366 266.7603 623.1787 259.0459 624.4644 c
253.9019 625.1069 248.1162 625.7505 244.9014 630.8936 c
243.6152 634.1084 241.687 636.6797 241.0439 639.8945 c
239.1152 648.252 239.7583 656.6099 240.4009 664.9678 c
241.0439 666.2534 242.3296 667.5396 242.3296 668.8252 c
244.9014 678.4692 250.0444 686.1841 257.7598 690.0415 c
259.6885 691.3271 262.9033 689.3979 262.9033 687.4697 c
264.189 682.9697 261.6167 678.4692 259.6885 674.6118 c
259.0459 672.6831 260.3315 670.1108 262.2598 670.1108 c
264.189 670.7539 266.1177 671.397 267.4033 672.6831 c
273.1895 680.3975 280.9048 685.541 288.6191 688.7554 c
293.7627 690.6841 299.5488 691.9702 303.4063 695.8276 c
305.335 697.7563 304.0498 701.6138 305.335 703.5425 c
305.9775 704.1855 307.2637 704.8281 307.9072 706.1143 c
308.5498 708.6855 307.2637 711.2573 304.6924 712.5435 c
296.334 715.7578 286.0479 711.2573 280.2622 703.5425 c
277.0469 699.042 270.6177 699.042 265.4746 697.1133 c
262.2598 695.8276 259.0459 692.6133 255.8306 693.8989 c
251.9731 695.8276 247.4731 695.1846 243.6152 697.1133 c
240.4009 698.3989 235.2578 699.042 234.6147 702.8994 c
233.3291 706.1143 232.686 710.6143 234.6147 712.5435 c
242.9727 721.5444 255.188 723.4731 266.1177 730.5444 c
269.9751 733.1167 273.8325 742.1172 268.0469 743.4033 c
263.5459 744.6885 259.0459 741.4746 254.5449 739.5454 c
249.4019 737.6167 243.6152 737.6167 237.8296 735.688 c
233.9717 735.0454 230.7573 738.9028 226.9004 740.188 c
219.8281 743.4033 212.7559 747.9033 206.9697 754.9756 c
205.6841 756.9043 206.3271 760.1182 208.2559 760.1182 c
215.9707 761.4043 224.3281 760.1182 232.043 759.4756 c
243.6152 758.1899 255.188 761.4043 266.7603 763.9761 c
268.6895 764.6191 271.9038 765.2622 272.5469 767.8335 c
273.8325 774.2632 273.8325 780.0483 275.7612 785.835 c
277.0469 790.978 277.6899 796.1216 280.2622 801.2646 c
282.833 806.4082 288.6191 814.1235 295.6914 809.623 c
296.334 809.623 295.0488 807.6943 294.4053 806.4082 c
293.7627 794.8359 295.6914 783.9063 296.9775 772.334 c
296.9775 771.6909 298.2637 769.7622 299.5488 769.1191 c
314.3359 768.4766 328.4795 772.334 341.9805 778.1196 c
345.8379 780.0483 348.4102 783.9063 352.2676 785.835 c
354.1963 786.478 356.126 785.1924 356.126 783.9063 c
358.6963 777.4771 354.1963 771.0483 350.3389 765.2622 c
b334.2666 355.7285 m
339.2744 351.0762 345.8379 345.4414 341.3379 339.6543 c
338.124 335.1563 332.9805 326.1543 325.9092 330.6543 C
329.123 335.1563 325.2656 339.0137 321.4082 340.2988 c
313.6934 342.2266 305.335 342.8711 297.6191 339.0137 c
290.5479 336.4414 286.0479 329.3691 278.9756 326.1543 c
277.0469 324.8672 275.1182 323.582 272.5469 322.9395 c
271.9038 322.9395 270.6177 321.6543 269.332 321.0117 c
264.8315 319.7246 259.6885 317.1543 255.188 317.7969 c
248.7593 318.4395 242.3296 316.5098 236.5435 319.7246 c
235.9009 319.7246 234.6147 320.3672 233.9717 321.6543 c
233.3291 322.9395 233.3291 324.2246 232.686 325.5117 c
230.1143 328.7246 232.043 332.584 234.6147 335.1563 c
239.7583 342.8711 248.1162 346.084 255.8306 349.9414 c
259.0459 351.8711 262.9033 352.5137 266.1177 353.1563 c
271.9038 355.7285 271.9038 362.8008 270.6177 367.9434 c
269.9751 370.5156 266.7603 373.7285 264.189 372.4434 c
260.3315 369.8711 255.8306 369.2285 251.9731 367.9434 c
246.8306 366.6582 242.3296 362.1563 236.5435 364.0859 c
235.2578 364.7285 234.6147 366.0137 233.3291 366.6582 c
230.7573 367.9434 228.186 367.9434 225.6143 369.2285 c
222.3994 369.8711 219.8281 371.8008 216.6133 373.7285 c
214.6841 374.373 212.7559 376.3008 211.4702 376.9434 c
209.5415 378.2305 207.6128 379.5156 205.6841 380.1582 c
203.1118 382.0879 199.2544 384.0156 201.8267 387.873 C
219.1855 387.2305 236.5435 386.5879 254.5449 390.4453 c
259.0459 391.7305 265.4746 389.1582 268.0469 393.6602 c
273.1895 400.0898 270.6177 409.0898 275.7612 416.1621 c
279.6182 421.9478 284.7622 429.6626 293.1191 428.3774 c
295.0488 428.3774 296.334 425.8052 295.6914 423.8765 c
292.4766 416.8047 292.4766 409.0898 293.7627 401.375 c
294.4053 400.0898 295.6914 398.8027 296.9775 398.8027 c
304.6924 398.8027 311.7646 401.375 319.4785 403.3027 c
322.0508 403.9473 324.623 405.875 327.1943 406.5176 c
335.5518 409.0898 343.9102 411.6621 352.2676 409.0898 c
354.8389 407.8047 356.7676 404.5898 354.8389 402.0176 c
352.2676 398.1602 349.0527 395.5879 345.1953 393.0156 c
344.5527 393.0156 343.9102 393.0156 343.2666 393.0156 c
341.9805 391.7305 341.3379 391.0879 340.0518 390.4453 c
334.9092 388.5176 329.7666 386.5879 324.623 384.0156 c
316.2656 381.4434 307.9072 380.1582 299.5488 376.9434 c
295.0488 375.0156 297.6191 369.2285 298.9063 364.7285 c
298.9063 364.0859 300.835 362.8008 301.4775 362.8008 c
312.4072 362.8008 325.2656 364.0859 334.2666 355.7285 c
b*u
1 D
350.3389 265.7207 m
346.4814 269.5781 342.624 272.793 336.1943 273.4355 C
330.4082 274.7207 335.5518 281.793 336.8379 286.293 C
338.124 290.1504 337.4805 294.0078 337.4805 297.8652 c
337.4805 301.7227 336.1943 305.5801 334.9092 308.7949 C
333.624 310.7246 333.624 312.6523 332.3369 314.582 C
329.7666 317.7969 325.9092 321.0117 322.0508 321.6543 C
316.2656 322.9395 310.4785 322.9395 304.6924 321.6543 c
298.2637 320.3672 291.834 320.3672 286.0479 318.4395 C
280.2622 315.8672 274.4751 313.9395 268.6895 310.7246 C
264.8315 308.7949 261.6167 303.6523 257.1172 302.3672 C
250.688 301.0801 255.8306 309.4375 253.2593 312.6523 C
251.9731 313.2969 250.0444 313.2969 248.7593 312.0098 C
246.187 308.1523 242.3296 305.5801 240.4009 301.7227 C
238.4722 298.5098 236.5435 295.2949 235.2578 292.0801 c
232.686 285.0078 230.7573 277.9355 231.4004 270.2207 C
232.043 265.7207 233.3291 261.8633 234.6147 257.3613 C
235.2578 252.8633 237.187 247.7188 240.4009 244.5039 C
244.9014 241.291 250.0444 241.291 255.188 243.2188 C
260.3315 245.791 260.9741 252.2188 266.1177 253.5039 C
272.5469 254.791 279.6182 254.791 286.0479 253.5039 c
300.835 250.9336 314.3359 252.2188 328.4795 250.291 C
336.1943 249.6465 345.8379 251.5762 351.625 258.0059 C
353.5537 260.5781 352.2676 263.793 350.3389 265.7207 c
b0 D
300.1914 274.7207 m
293.7627 271.5059 286.6904 272.1504 280.2622 268.9355 c
278.9756 268.293 277.6899 268.9355 276.4043 268.9355 C
273.1895 267.6504 270.6177 265.7207 267.4033 263.793 C
264.8315 262.5059 262.9033 265.0781 262.2598 267.0059 C
261.6167 270.8633 260.9741 274.7207 262.2598 277.9355 C
262.9033 279.2207 263.5459 280.5078 264.189 281.793 C
264.189 282.4355 264.189 283.7207 264.189 284.3652 C
265.4746 286.293 267.4033 288.2227 269.332 289.5078 C
277.6899 297.2227 287.334 303.6523 299.5488 302.3672 C
302.7637 302.3672 305.335 299.1523 307.2637 296.5801 C
308.5498 294.0078 308.5498 291.4375 308.5498 288.8652 c
308.5498 283.0801 305.335 277.293 300.1914 274.7207 c
b*U
u*u
1 D
381.8408 94.707 m
368.3398 95.3496 355.4814 96.6348 341.9805 92.7773 C
334.2666 90.2051 327.1943 84.4199 318.8359 85.7051 C
312.4072 86.9902 304.0498 85.0625 300.835 92.1348 C
299.5488 94.707 302.1201 97.2773 303.4063 98.5625 c
309.835 104.9922 320.1221 106.2773 325.9092 113.9941 C
328.4795 115.9219 329.7666 119.1367 329.123 122.9941 C
328.4795 125.5664 327.1943 128.7793 325.9092 131.3516 C
323.9795 136.4941 320.1221 140.3535 314.9785 142.9238 C
309.835 144.8535 304.6924 142.2813 299.5488 143.5684 C
297.6191 143.5684 296.9775 146.1387 297.6191 148.0684 C
299.5488 151.9238 303.4063 151.9238 306.6211 153.8535 C
307.9072 155.1406 311.1211 155.7813 313.0498 157.0684 c
327.1943 166.0703 340.0518 173.1406 349.6953 187.2852 c
350.9814 189.2148 351.625 190.5 352.2676 192.4297 c
353.5537 196.2852 353.3613 200.8125 352.9102 204.6445 c
351.625 215.5742 345.1953 226.502 335.5518 231.0039 c
325.9092 235.5039 315.6221 234.8613 305.335 232.9316 C
298.9063 232.2891 291.834 231.6465 286.0479 228.4316 C
279.6182 225.2168 273.1895 222.6445 266.7603 218.1445 C
260.3315 213.002 253.9019 208.502 250.0444 201.4297 C
248.7593 198.8574 250.688 194.3574 247.4731 192.4297 C
242.3296 189.8574 239.7583 196.9297 238.4722 200.7871 C
237.187 203.3574 234.6147 205.9297 233.9717 208.502 c
232.686 213.002 231.4004 217.502 227.543 220.0742 c
225.6143 221.3594 223.6855 218.1445 223.6855 216.2168 C
222.3994 210.4297 223.0425 205.2852 222.3994 200.1426 C
221.7568 198.8574 223.6855 197.5723 223.0425 196.2852 C
219.8281 191.1426 221.7568 184.7129 221.7568 179.5703 c
221.7568 172.498 223.0425 164.7832 226.2573 158.3535 c
228.8291 153.2109 231.4004 146.7813 237.8296 144.8535 C
242.9727 143.5684 250.0444 143.5684 252.6167 148.0684 C
253.9019 149.3535 254.5449 152.5684 256.4741 153.8535 C
258.4033 154.4961 259.6885 152.5684 260.9741 151.2832 C
263.5459 149.3535 264.8315 145.4961 268.6895 144.8535 c
271.9038 144.2109 275.7612 145.4961 278.9756 144.8535 C
284.1187 142.9238 281.5474 136.4941 278.9756 133.2813 C
275.7612 128.7793 271.9038 125.5664 269.332 121.0664 c
266.7603 116.5645 264.8315 112.0645 266.7603 107.5645 C
267.4033 106.2773 269.9751 104.9922 269.9751 103.707 C
271.9038 95.9922 262.9033 92.7773 257.1172 91.4922 C
239.1152 88.2773 219.8281 95.3496 206.9697 81.2051 C
201.1831 75.418 207.6128 68.9902 213.3989 66.418 C
218.542 64.4902 224.3281 63.8457 230.1143 65.1328 C
241.687 68.3477 251.3306 73.4902 262.2598 77.3477 c
266.1177 78.6348 270.6177 78.6348 274.4751 77.3477 C
289.2627 73.4902 303.4063 74.1328 317.5508 68.3477 c
323.9795 65.7754 331.0518 67.0605 338.124 65.7754 C
340.6953 65.7754 341.9805 67.7031 343.9102 67.7031 C
343.9102 68.9902 344.5527 69.6328 345.1953 69.6328 c
347.124 69.6328 347.7676 70.918 349.0527 71.5605 C
350.3389 72.8477 351.625 75.418 353.5537 76.0605 c
355.4814 76.7051 357.4111 77.9902 359.3389 78.6348 C
364.4824 80.5625 368.9834 84.4199 374.127 86.9902 C
376.0547 87.6348 378.627 88.2773 380.5557 88.9199 C
381.8408 89.5625 384.4131 90.2051 384.4131 92.7773 c
384.4131 94.0625 382.4844 94.707 381.8408 94.707 C
b0 D
281.5474 109.4922 m
280.2622 108.8496 278.9756 109.4922 278.9756 112.0645 c
278.9756 113.9941 280.2622 115.2793 282.1904 114.6367 C
283.4756 113.9941 283.4756 112.0645 283.4756 110.7793 c
283.4756 109.4922 282.1904 110.1367 281.5474 109.4922 C
b282.833 164.7832 m
280.2622 161.5684 275.7612 161.5684 273.8325 165.4258 C
273.1895 167.998 276.4043 169.9277 277.6899 171.2129 c
279.1274 172.6504 282.1904 173.7832 283.4756 171.2129 C
284.1187 169.2832 284.1187 166.7129 282.833 164.7832 C
b285.4048 193.7148 m
284.7622 193.7148 282.833 193.0723 282.1904 193.0723 C
273.1895 186 266.7603 177.6406 263.5459 166.7129 C
263.5459 165.4258 264.189 164.1406 263.5459 162.8555 C
261.6167 160.2832 257.7598 159.6406 256.4741 162.8555 C
255.8306 166.0703 254.5449 169.2832 254.5449 171.8555 c
254.5449 192.4297 271.2612 211.0723 291.834 215.5742 C
295.6914 216.2168 298.2637 218.1445 302.1201 217.502 c
309.1924 216.2168 314.9785 211.0723 317.5508 203.3574 c
318.8359 199.5 318.1934 195 318.1934 191.1426 c
318.1934 187.2852 314.9785 184.0703 313.0498 180.2129 C
310.4785 176.3555 307.9072 168.6406 301.4775 169.2832 C
300.835 173.7832 305.335 178.2852 307.9072 182.1426 C
309.835 185.3574 309.1924 189.2148 307.9072 192.4297 C
306.6211 194.3574 304.0498 196.2852 302.1201 196.9297 C
296.334 199.5 290.5479 197.5723 285.4048 193.7148 C
b298.9063 122.3516 m
299.3604 123.7148 301.4775 122.9941 302.1201 122.9941 C
302.7637 122.3516 302.7637 120.4219 301.4775 119.7793 C
299.5488 119.1367 298.2637 120.4219 298.9063 122.3516 c
b*U
340.6953 122.3516 m
338.7666 117.207 341.9805 111.4219 345.1953 106.2773 c
347.7676 102.4199 352.2676 98.5625 358.0537 101.1348 c
363.8398 103.707 363.8398 111.4219 359.3389 113.9941 C
358.0537 114.6367 356.7676 116.5645 355.4814 116.5645 C
354.8389 117.207 354.0752 118.3828 352.9102 119.7793 c
349.6953 123.6367 342.624 127.4941 340.6953 122.3516 c
bU*u
1 D
374.127 470.8091 m
368.3398 470.8091 362.5537 472.0942 356.7676 472.0942 C
338.124 470.8091 320.7646 465.022 301.4775 468.8804 c
295.6914 470.1665 298.9063 478.5234 301.4775 482.3809 C
306.6211 492.0244 318.1934 495.2393 322.0508 505.5259 C
323.3369 509.3833 323.3369 514.5269 321.4082 518.3843 C
316.9072 526.0991 307.2637 526.0991 298.9063 526.7417 C
295.6914 531.8853 302.1201 534.4565 305.335 535.0996 C
314.3359 538.3145 321.7178 543.0977 328.4795 549.2441 c
335.5518 555.6729 342.624 560.8159 345.8379 569.1738 C
348.4102 574.9604 349.6953 581.3896 348.4102 587.8184 C
347.7676 590.3901 347.7676 593.6045 346.4814 596.1763 C
343.2666 600.6768 340.6953 605.8198 335.5518 609.0342 C
334.2666 609.6772 332.9805 610.3208 331.6943 610.3208 C
329.123 611.606 327.1943 613.5347 324.623 614.8208 C
309.835 618.0352 295.0488 614.1777 281.5474 608.3916 C
277.6899 607.1055 273.8325 603.2485 269.332 600.6768 C
268.6895 600.0337 266.7603 598.748 265.4746 598.105 C
261.6167 594.2476 257.1172 591.6758 253.9019 586.5327 c
251.3306 582.6753 249.4019 579.4604 247.4731 576.2456 C
246.187 574.3169 244.9014 573.0317 244.9014 571.103 C
244.2583 569.8169 242.3296 567.8882 240.4009 568.5313 C
236.5435 570.46 235.2578 574.9604 233.9717 578.1748 C
233.3291 579.4604 232.686 580.7466 232.043 582.0322 C
230.7573 583.3184 229.4717 584.604 228.8291 585.8896 C
226.2573 592.3188 223.6855 598.748 217.8994 602.6055 C
216.6133 603.2485 214.6841 602.6055 213.3989 602.6055 C
211.4702 601.9624 212.1128 600.0337 211.4702 598.748 C
210.1841 594.2476 212.7559 589.104 212.7559 584.604 C
213.3989 575.603 214.6841 566.6021 217.2568 558.2446 c
219.1855 552.4585 218.542 546.0293 221.1138 539.6006 C
221.7568 538.9575 222.3994 538.3145 223.0425 537.6714 C
224.9712 528.6709 232.686 520.313 241.687 522.8843 C
246.8306 524.813 250.688 529.9565 251.3306 535.0996 C
253.2593 544.7432 250.688 554.3872 255.8306 563.3882 c
264.8315 579.4604 278.333 594.8906 297.6191 594.8906 c
302.1201 594.8906 307.9072 593.6045 311.7646 590.3901 C
314.9785 587.1753 317.5508 582.6753 318.1934 578.1748 C
319.4785 574.3169 316.2656 571.103 314.3359 567.8882 C
314.3359 567.2451 314.3359 565.9595 314.3359 565.3164 C
312.4072 562.1021 309.835 559.5303 306.6211 556.9585 C
304.6924 556.3154 300.1914 554.3872 300.835 557.6016 C
301.4775 563.3882 305.9775 571.7456 300.1914 574.9604 C
296.334 577.5317 290.5479 577.5317 285.4048 574.3169 C
278.9756 569.1738 273.1895 565.3164 266.7603 560.1733 C
264.189 558.2446 263.5459 555.0298 262.2598 552.4585 C
260.9741 548.6011 262.2598 544.7432 264.8315 542.8145 C
268.6895 538.9575 275.1182 537.6714 280.2622 535.0996 C
284.1187 532.5283 284.7622 526.0991 281.5474 522.8843 C
275.7612 518.3843 269.9751 514.5269 264.8315 509.3833 c
260.9741 505.5259 259.0459 501.6685 257.7598 497.168 C
256.4741 490.7393 262.2598 488.8105 264.189 484.3096 c
266.1177 479.8096 259.6885 477.8809 256.4741 475.9517 C
241.0439 468.2378 224.9712 466.3081 208.2559 468.8804 C
206.3271 469.5229 204.3979 466.9517 205.6841 465.022 C
208.8984 458.5933 217.2568 457.9507 223.6855 454.0933 C
224.9712 452.8071 226.9004 451.521 229.4717 450.8784 C
230.1143 450.8784 231.4004 449.5923 232.043 449.5923 C
235.9009 447.6636 239.7583 447.021 244.2583 447.021 c
244.9014 447.021 246.187 445.7349 246.8306 445.0923 C
250.0444 444.4497 253.2593 444.4497 255.8306 445.7349 C
259.0459 447.021 262.9033 449.5923 266.1177 450.8784 c
277.0469 455.3784 288.6191 454.0933 300.1914 452.1646 C
305.9775 451.521 311.7646 449.5923 317.5508 448.9497 C
319.4785 448.9497 322.0508 448.3071 323.9795 447.021 C
325.2656 446.3784 327.8369 447.6636 329.123 447.021 c
330.4082 446.3784 331.6943 445.7349 332.9805 445.0923 C
334.9092 444.4497 336.8379 444.4497 338.7666 445.0923 C
349.0527 449.5923 357.4111 456.6646 367.0547 461.8081 C
370.2686 463.0933 374.127 464.3794 376.0547 466.9517 C
376.6982 468.2378 376.0547 470.8091 374.127 470.8091 c
b0 D
282.1904 551.1729 m
281.5474 551.1729 280.9048 551.1729 280.2622 551.1729 c
278.2285 551.1729 278.333 554.3872 279.6182 555.6729 C
282.1904 556.9585 284.1187 553.1016 282.1904 551.1729 C
b278.333 492.668 m
277.0469 492.668 277.0469 491.3818 276.4043 491.3818 c
274.4751 491.3818 273.8325 493.3105 273.8325 495.2393 c
273.8325 497.8105 275.7612 499.7397 277.6899 498.4541 C
278.9756 497.168 278.333 494.5967 278.333 492.668 C
b*U
U%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
