; d3dslide.ini, v1.1 2012/06/07
; coded by asmodean

; contact: 
;   web:   http://asmodean.reverse.net
;   email: asmodean [at] hush.com
;   irc:   asmodean on efnet (irc.efnet.net)

[d3dslide]

; Set the overall process priority to high
d3dslide.PROCESS_HIGH_PRIORITY=true

; ------------------------------------------------------------------------
; D3D Control options
; ------------------------------------------------------------------------

; Set the render thread priority to high
d3d_control.SET_THREAD_HIGH_PRIORITY=true

; You can try this if your GPU doesn't support vertex processing but if so
; it probably won't be able to handle large textures either.
d3d_control.USE_SOFTWARE_VERTEXPROCESSING=false

; This does not seem to improve performance.
d3d_control.FULL_SCREEN_DISPLAYMODE=false

; ------------------------------------------------------------------------
; D3D Image options
; ------------------------------------------------------------------------

; These are not maximum values for the dimensions; they are multiplied
; to produce a total maximum number of pixels for a texture.  Set to
; zero for unlimited.

; These values were selected after experimentation with an integrated
; nVidia GeForce 9400 MPC chipset on my HTPC.
d3d_image.MAX_TEXTURE_PIXELS_X=1800
d3d_image.MAX_TEXTURE_PIXELS_Y=1800

; Pre-scale images with a pretty good resampling algorithm (lanzcos).
d3d_image.PRESCALE_IMAGES=true

; Algorithm to use for scaling.  My experience is that Lanczos and Catmull-Rom
; provide a sharp result but sometimes has very bad block artifacts.  B-spline
; on the other hand produces a much softer result without the artifacts.

; FILTER_BOX        = 0, // Box, pulse, Fourier window, 1st order (constant) b-spline
; FILTER_BICUBIC    = 1, // Mitchell & Netravali's two-param cubic filter
; FILTER_BILINEAR   = 2, // Bilinear filter
; FILTER_BSPLINE    = 3, // 4th order (cubic) b-spline
; FILTER_CATMULLROM = 4, // Catmull-Rom spline, Overhauser spline
; FILTER_LANCZOS3   = 5  // Lanczos3 filter
d3d_image.PRESCALE_METHOD=4

; Images below either of these dimensions will be pre-scaled.  When zero,
; they are the screen dimensions.
d3d_image.PRESCALE_MIN_WIDTH=0
d3d_image.PRESCALE_MIN_HEIGHT=0

; Pre-scale target dimensions.  When zero, they are the screen dimensions
; plus 50% (because we will zoom in for effects).
d3d_image.PRESCALE_TARGET_WIDTH=0
d3d_image.PRESCALE_TARGET_HEIGHT=0

; ------------------------------------------------------------------------
; Presenter options
; ------------------------------------------------------------------------

; Base presentation time for each image. The actual time is randomized
; by a small amount.
presenter.BASE_PRESENTATION_SEC=20

; Time it takes for the next image to fade in.
presenter.TRANSITION_SEC=3

; Number of repetitions for each image before switching.
presenter.REPEAT_COUNT=2

; Weights on each method influences the chance of selection.  Zero will
; prevent the method from being used. (Or comment them out.)
presenter.METHOD_WEIGHT_GLIDE_LINEAR=3
presenter.METHOD_WEIGHT_GLIDE=3
presenter.METHOD_WEIGHT_GLIDE_ZOOMIN=5
presenter.METHOD_WEIGHT_GLIDE_ZOOMOUT=5
presenter.METHOD_WEIGHT_ZOOMIN_FAST_GLIDE=3
presenter.METHOD_WEIGHT_GLIDE_FAST_ZOOMOUT=3
presenter.METHOD_WEIGHT_ZOOMIN=1
presenter.METHOD_WEIGHT_ZOOMOUT=2

; Set the presenter thread to low priority
presenter.SET_THREAD_LOW_PRIORITY=false

; ------------------------------------------------------------------------
; Imager Loader options
; ------------------------------------------------------------------------

; Scan all subdirectories for images
image_loader.SCAN_SUBDIRECTORIES=true

; Load images in a random order.
image_loader.RANDOM_IMAGE_ORDER=true

; Skip small images whose dimensions are below either of these.  This
; option causes more file access so leave them at zero unless you really
; need to filter something.
image_loader.MIN_IMAGE_WIDTH=0
image_loader.MIN_IMAGE_HEIGHT=0

; Set the image loader thread to low priority
image_loader.SET_THREAD_LOW_PRIORITY=false
