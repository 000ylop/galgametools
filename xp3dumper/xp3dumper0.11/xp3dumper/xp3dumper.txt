xp3dumper 0.11 说明：

3种提取手段，均属YY出来的
先搞了方法1，然后想怎么对付方法1，然后针对对付方法设计了方法2
然后想怎么对付方法2，结果就出现了设计方法3。

方法1：
将!dumpHelper.tpm和~xp3dumper0.11.tpm同时扔到对应目录下，选择方法1即可

方法2：
将!dumpHelper.tpm和~xp3dumper0.11.tpm同时扔到对应目录下，选择方法2即可
之后请输入xp3文件的路径名来解码如下：
比如D:\abc\data.xp3现在有已下3种写法：
(1) file://./D/abc/data.xp3   [默认方法]
(2) D:\abc\data.xp3           [Windows路径名]
(3) data.xp3                  [最简版，要求其放在游戏路径中]

方法3: DLL Inject
这个方法应该说属于备用手段，因为我还没找到真正阻止了方法二的程序。

* 步骤1： 采集exporter信息
  helper/!exporteraddr.tpm 插件可以完成这个诡异的工作，其实其什么功能都没有= =
  运行后会在程序目录下的exporter_address.txt中记录一个关键的数值

* 步骤2：准备数据
  在游戏目录下建立arc_list.txt，里面填上你需要解包的包的路径，格式同方法2中一样! 每个一行，不要有别的内容
  目前只能支持ASCII，所以你如果路径中有奇怪的字符，说不定就会悲剧

* 步骤3： 找一个DLL注入工具，运行目标程序后，将xp3dumper插件注入
  你可以选择我5min粗制滥造的DllLoader。具体过程：
  - 运行目标程序，等到处于稳定状态（比如开始菜单）
  - 打开任务管理器，找到对应进程的pid(可能要先选菜单中 查看->选择列 中勾出pid这一项)，或者命令行用tasklist指令
  - 在命令行输入： <DllLoader path> <pid> <xp3dumper path>
    比如说： D:\DllLoader 4321 D:\Tools\~xp3dumper0.11.tpm

* 步骤4：完工
  在注入后的窗口下面填上采集到的exporter的地址，然后开始模式3即可。
  请一定选上使用日志文件。
